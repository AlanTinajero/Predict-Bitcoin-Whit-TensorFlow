# -*- coding: utf-8 -*-
"""scratchpad

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/notebooks/empty.ipynb
"""

import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt

# Genera datos de ejemplo
np.random.seed(0)
X_train = np.linspace(62.43, 63.91, 5)
y_train = 2 * X_train + 1 + np.random.normal(0, 2, size=len(X_train))

# Define el modelo de regresión lineal
model = tf.keras.Sequential([
    tf.keras.layers.Input(shape=(1,), name='input_layer'),
    tf.keras.layers.Dense(units=1, activation='linear', name='output_layer')
])

# Compila el modelo
model.compile(optimizer='sgd', loss='mean_squared_error')

# Entrena el modelo
model.fit(X_train, y_train, epochs=1000, verbose=0)

# Predice valores con el modelo entrenado
X_test = np.linspace(62.43, 63.91, 100)  # Ajustado el rango y número de puntos
y_pred = model.predict(X_test)

# Visualiza los resultados
plt.scatter(X_train, y_train, label='Datos de entrenamiento')
plt.plot(X_test, y_pred, color='red', linewidth=3, label='Tendencia predicha')
plt.xlabel('X')
plt.ylabel('y')
plt.legend()
plt.show()